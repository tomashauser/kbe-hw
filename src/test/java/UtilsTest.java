import lab1.Utils;
import org.testng.annotations.Test;
import utils.Utils;

import static org.testng.AssertJUnit.assertEquals;

public class UtilsTest {
    @Test
    public void getBinFromText() {
        String input = " !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~";

        String expected
        String actual = Utils.getBinFromText(input);

        assertEquals(expected, actual);
    }

    @Test
    public void getHexFromText() {
        String input = " !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~";

        String expected = "202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E";
        String actual = Utils.getHexFromText(input);

        assertEquals(expected.toLowerCase(), actual.toLowerCase());
    }

    @Test
    public void getTextFromBin() {
        String input

        String expected = " !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~";
        String actual = Utils.getTextFromBin(input);

        assertEquals(expected, actual);
    }

    @Test
    public void getTextFromHex() {
        String input = "202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E";

        String expected = " !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~";
        String actual = Utils.getTextFromHex(input);

        assertEquals(expected, actual);
    }

    @Test
    public void getHexFromBin() {
        String input

        String expected = "202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E";
        String actual = Utils.getHexFromBin(input);

        assertEquals(expected.toLowerCase(), actual);
    }

    @Test
    public void getBinFromHex() {
        String input = "202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E";

        String expected
        String actual = Utils.getBinFromHex(input);

        assertEquals(expected, actual);
    }
}
